<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iMaeGoo&#39;s Blog</title>
  
  <subtitle>虹墨空间站</subtitle>
  <link href="https://www.imaegoo.com/atom.xml" rel="self"/>
  
  <link href="https://www.imaegoo.com/"/>
  <updated>2021-07-08T04:55:00.000Z</updated>
  <id>https://www.imaegoo.com/</id>
  
  <author>
    <name>iMaeGoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>集成 Twikoo 与 lightGallery 插件，实现评论图片的点击放大</title>
    <link href="https://www.imaegoo.com/2021/twikoo-lightgallery/"/>
    <id>https://www.imaegoo.com/2021/twikoo-lightgallery/</id>
    <published>2021-07-08T04:55:00.000Z</published>
    <updated>2021-07-08T04:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Twikoo 文档页和本站的评论区，支持评论图片点击放大，你现在就可以就下拉到本文评论区试一试！</p><h3 id="为什么-Twikoo-没有官方支持图片点击放大？"><a href="#为什么-Twikoo-没有官方支持图片点击放大？" class="headerlink" title="为什么 Twikoo 没有官方支持图片点击放大？"></a>为什么 Twikoo 没有官方支持图片点击放大？</h3><ol><li>会增加包体大小</li><li>涉及 body DOM 节点操作，为了不影响在不同主题下的显示效果，需要杜绝这类操作</li><li>lightGallery 库是 GPLv3 协议的</li></ol><h3 id="我就想要实现图片点击放大功能！"><a href="#我就想要实现图片点击放大功能！" class="headerlink" title="我就想要实现图片点击放大功能！"></a>我就想要实现图片点击放大功能！</h3><p>首先需要你拥有修改博客主题的能力。</p><a id="more"></a><ol><li>在合适的位置（文章页，<code>twikoo.init()</code> 之前），引入相关的 JS 和 CSS 文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- lightGallery --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/lightgallery@2.1.8/css/lightgallery.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/lightgallery@2.1.8/lightgallery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>找到 <code>twikoo.init</code> 代码所在位置，进行修改</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">twikoo.init(&#123;</span><br><span class="line">  <span class="comment">// envId: &#x27;abcdef&#x27;,</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">onCommentLoaded</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> commentContents = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;tk-content&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; commentContents.length; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> commentItem = commentContents[i];</span><br><span class="line">      <span class="keyword">var</span> imgEls = commentItem.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line">      <span class="keyword">if</span> (imgEls.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; imgEls.length; j++) &#123;</span><br><span class="line">          <span class="keyword">var</span> imgEl = imgEls[j];</span><br><span class="line">          <span class="keyword">var</span> aEl = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">          aEl.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;tk-lg-link&#x27;</span>);</span><br><span class="line">          aEl.setAttribute(<span class="string">&#x27;href&#x27;</span>, imgEl.getAttribute(<span class="string">&#x27;src&#x27;</span>));</span><br><span class="line">          aEl.setAttribute(<span class="string">&#x27;data-src&#x27;</span>, imgEl.getAttribute(<span class="string">&#x27;src&#x27;</span>));</span><br><span class="line">          aEl.appendChild(imgEl.cloneNode(<span class="literal">false</span>));</span><br><span class="line">          imgEl.parentNode.insertBefore(aEl, imgEl.nextSibling);</span><br><span class="line">          imgEl.remove();</span><br><span class="line">        &#125;</span><br><span class="line">        lightGallery(commentItem, &#123;</span><br><span class="line">          <span class="attr">selector</span>: <span class="string">&#x27;.tk-lg-link&#x27;</span>,</span><br><span class="line">          <span class="attr">share</span>: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="3"><li>大功告成！</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Twikoo 文档页和本站的评论区，支持评论图片点击放大，你现在就可以就下拉到本文评论区试一试！&lt;/p&gt;
&lt;h3 id=&quot;为什么-Twikoo-没有官方支持图片点击放大？&quot;&gt;&lt;a href=&quot;#为什么-Twikoo-没有官方支持图片点击放大？&quot; class=&quot;headerlink&quot; title=&quot;为什么 Twikoo 没有官方支持图片点击放大？&quot;&gt;&lt;/a&gt;为什么 Twikoo 没有官方支持图片点击放大？&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;会增加包体大小&lt;/li&gt;
&lt;li&gt;涉及 body DOM 节点操作，为了不影响在不同主题下的显示效果，需要杜绝这类操作&lt;/li&gt;
&lt;li&gt;lightGallery 库是 GPLv3 协议的&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;我就想要实现图片点击放大功能！&quot;&gt;&lt;a href=&quot;#我就想要实现图片点击放大功能！&quot; class=&quot;headerlink&quot; title=&quot;我就想要实现图片点击放大功能！&quot;&gt;&lt;/a&gt;我就想要实现图片点击放大功能！&lt;/h3&gt;&lt;p&gt;首先需要你拥有修改博客主题的能力。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="twikoo" scheme="https://www.imaegoo.com/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>Base64 在线文本加解密工具</title>
    <link href="https://www.imaegoo.com/2021/base64-tool/"/>
    <id>https://www.imaegoo.com/2021/base64-tool/</id>
    <published>2021-06-22T12:30:00.000Z</published>
    <updated>2021-06-22T12:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Base64 在线加解密工具，纯前端。</p><p>之所以写这个是因为网上的同类工具要么离不开后端操作，要么广告一堆，用着不顺手。</p><p>简单一点。</p><a id="more"></a><h3 id="输入文本"><a href="#输入文本" class="headerlink" title="输入文本"></a>输入文本</h3><div class="control">  <textarea id="text-plain" class="textarea" placeholder="输入文本"></textarea></div><br><div class="buttons">  <button class="button is-primary key-button" onclick="encrypt(0, event)">加密</button>  <button class="button is-primary key-button" onclick="encrypt(1, event)">解密</button></div><h3 id="加密-解密结果"><a href="#加密-解密结果" class="headerlink" title="加密 / 解密结果"></a>加密 / 解密结果</h3><div class="control">  <textarea id="text-encrypted" class="textarea" placeholder="Result" readonly></textarea></div><script src="https://cdn.jsdelivr.net/npm/base64-js@1.5.1/base64js.min.js"></script><script>function encrypt (decrypt, event) {  var base64req = $('#text-plain').val();  var base64res;  try {    if (decrypt) {      base64res = decodeuint8arr(base64js.toByteArray(base64req));    } else {      base64res = base64js.fromByteArray(encodeuint8arr(base64req));    }  } catch (e) {    base64res = e.message;  }  $('#text-encrypted').val(base64res);}function decodeuint8arr (uint8array) {  return new TextDecoder('utf-8').decode(uint8array);}function encodeuint8arr (myString) {  return new TextEncoder('utf-8').encode(myString);}</script><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;script src=&quot;https://cdn.jsdelivr.net/npm/base64-js@1.5.1/base64js.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span> (<span class="params">decrypt, event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> base64req = $(<span class="string">&#x27;#text-plain&#x27;</span>).val();</span><br><span class="line">  <span class="keyword">var</span> base64res;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (decrypt) &#123;</span><br><span class="line">      base64res = decodeuint8arr(base64js.toByteArray(base64req));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      base64res = base64js.fromByteArray(encodeuint8arr(base64req));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    base64res = e.message;</span><br><span class="line">  &#125;</span><br><span class="line">  $(<span class="string">&#x27;#text-encrypted&#x27;</span>).val(base64res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decodeuint8arr</span> (<span class="params">uint8array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> TextDecoder(<span class="string">&#x27;utf-8&#x27;</span>).decode(uint8array);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encodeuint8arr</span> (<span class="params">myString</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> TextEncoder(<span class="string">&#x27;utf-8&#x27;</span>).encode(myString);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Base64 在线加解密工具，纯前端。&lt;/p&gt;
&lt;p&gt;之所以写这个是因为网上的同类工具要么离不开后端操作，要么广告一堆，用着不顺手。&lt;/p&gt;
&lt;p&gt;简单一点。&lt;/p&gt;</summary>
    
    
    
    <category term="Tool" scheme="https://www.imaegoo.com/categories/tool/"/>
    
    
    <category term="tool" scheme="https://www.imaegoo.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>关闭 Ubuntu 20 桌面版动画，使应用程序菜单不再卡顿</title>
    <link href="https://www.imaegoo.com/2021/disable-ubuntu-animation/"/>
    <id>https://www.imaegoo.com/2021/disable-ubuntu-animation/</id>
    <published>2021-05-26T10:55:00.000Z</published>
    <updated>2021-05-26T10:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu Desktop 应用程序菜单带有从屏幕底角到屏幕中心的动画。虽然这看起来很酷，但我感觉它很卡，优化很差，尤其是在集成显卡和虚拟机的环境中。如果你的想法和我一样，有一种方法可以关闭此动画，从而可以更快地从“应用程序”菜单中启动应用程序。</p><ol><li>打开“终端”</li><li>执行以下命令，关闭动画，立即生效<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.desktop.interface enable-animations <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ol><p>想要重新开启动画，只需要执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.desktop.interface enable-animations <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>看看百度的答案都是些啥，还需要安装 compizconfig-settings-manager，其实一行命令就解决啦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Ubuntu Desktop 应用程序菜单带有从屏幕底角到屏幕中心的动画。虽然这看起来很酷，但我感觉它很卡，优化很差，尤其是在集成显卡和虚拟机的环境中。如果你的想法和我一样，有一种方法可以关闭此动画，从而可以更快地从“应用程序”菜单中启动应用程序。&lt;/p&gt;
&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Linux" scheme="https://www.imaegoo.com/categories/tech/linux/"/>
    
    
    <category term="ubuntu" scheme="https://www.imaegoo.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Twikoo 多个页面共用一个评论区</title>
    <link href="https://www.imaegoo.com/2021/twikoo-path/"/>
    <id>https://www.imaegoo.com/2021/twikoo-path/</id>
    <published>2021-05-20T04:55:00.000Z</published>
    <updated>2021-06-09T04:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时候博主希望多个页面共用一个评论区，我们可以自定义 path 做到这一点。</p><p>首先要确定自己所用的博客主题支持 Twikoo path 配置，否则需要自己修改主题源码添加 path 配置。</p><p>设置主题的 Twikoo path 配置为 <code>window.TWIKOO_MAGIC_PATH||window.location.pathname</code></p><p>然后在所有需要共用评论区的页面正文中增加以下代码 <code>&lt;script&gt;window.TWIKOO_MAGIC_PATH=&quot;评论区名称&quot;&lt;/script&gt;</code></p><p>把中间的“评论区名称”替换为你指定的名称，共用的页面请起 <strong>相同的</strong> 评论区名称，其他页面不做改动即可。</p><p>试试看！</p><a id="more"></a><article class="message is-warning"><div class="message-header"><p>注意</p></div><div class="message-body"><p>如果你的网站使用了 PJAX 或类似的局部刷新技术，请在页面切换时清除 window.TWIKOO_MAGIC_PATH 的值，以免造成异常的评论区共用。</p></div></article>]]></content>
    
    
    <summary type="html">&lt;p&gt;有时候博主希望多个页面共用一个评论区，我们可以自定义 path 做到这一点。&lt;/p&gt;
&lt;p&gt;首先要确定自己所用的博客主题支持 Twikoo path 配置，否则需要自己修改主题源码添加 path 配置。&lt;/p&gt;
&lt;p&gt;设置主题的 Twikoo path 配置为 &lt;code&gt;window.TWIKOO_MAGIC_PATH||window.location.pathname&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后在所有需要共用评论区的页面正文中增加以下代码 &lt;code&gt;&amp;lt;script&amp;gt;window.TWIKOO_MAGIC_PATH=&amp;quot;评论区名称&amp;quot;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把中间的“评论区名称”替换为你指定的名称，共用的页面请起 &lt;strong&gt;相同的&lt;/strong&gt; 评论区名称，其他页面不做改动即可。&lt;/p&gt;
&lt;p&gt;试试看！&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="twikoo" scheme="https://www.imaegoo.com/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>Cloudflare Worker 无服务器追查 Git 仓库代码泄露</title>
    <link href="https://www.imaegoo.com/2021/git-tracking-image/"/>
    <id>https://www.imaegoo.com/2021/git-tracking-image/</id>
    <published>2021-05-07T04:55:00.000Z</published>
    <updated>2021-05-07T04:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>大部分 Git 平台，如 Github、Gitlab 等，会在打开仓库时自动渲染 README.md，而我们利用这一特性，通过对 README.md 中的图片访问日志加以记录，可以实现追查代码泄露的目的。</p><p>如果你还没有 Cloudflare 账号，可以<a href="https://dash.cloudflare.com/sign-up">申请一个</a>。</p><p>登录 Cloudflare 后，进入 Workers 页面，点击 KV。</p><a id="more"></a><p><img src="/gallery/2021/git-tracking-image-1.png"></p><p>添加一个 Cloudflare KV，起名 ref，用于记录访问记录。</p><p><img src="/gallery/2021/git-tracking-image-2.png"></p><p>创建 Cloudflare Worker，起名 img，用于记录请求信息，并转发图片资源请求。</p><p><img src="/gallery/2021/git-tracking-image-3.png"></p><p>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(<span class="string">&#x27;fetch&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  event.respondWith(handleRequest(event.request));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">handleRequest</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> response;</span><br><span class="line">  <span class="keyword">if</span> (request.url.slice(-<span class="number">4</span>).toLowerCase() === <span class="string">&#x27;.png&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> ref = request.headers.get(<span class="string">&#x27;referer&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (ref) &#123;</span><br><span class="line">      <span class="keyword">const</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString(<span class="string">&#x27;zh-CN&#x27;</span>, &#123; <span class="attr">timeZone</span>: <span class="string">&#x27;Asia/Shanghai&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">const</span> ip = request.headers.get(<span class="string">&#x27;CF-Connecting-IP&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> ua = request.headers.get(<span class="string">&#x27;User-Agent&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> key = <span class="string">`Referer: <span class="subst">$&#123;ref&#125;</span>`</span>;</span><br><span class="line">      <span class="keyword">const</span> val = <span class="string">`时间: <span class="subst">$&#123;time&#125;</span>\nIP: <span class="subst">$&#123;ip&#125;</span>\nUA: <span class="subst">$&#123;ua&#125;</span>`</span>;</span><br><span class="line">      <span class="keyword">await</span> REF.put(key, val, &#123; <span class="attr">expirationTtl</span>: <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">365</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> redirect = <span class="keyword">new</span> Request(<span class="string">&#x27;https://cdn.jsdelivr.net/gh/imaegoo/image/1x1_ffffff00.png&#x27;</span>);</span><br><span class="line">    response = <span class="keyword">await</span> fetch(redirect);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    response = <span class="keyword">new</span> Response(<span class="string">&#x27;not found&#x27;</span>, &#123; <span class="attr">status</span>: <span class="number">404</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将 KV ref 的命名空间绑定到 Worker img。</p><p><img src="/gallery/2021/git-tracking-image-4.png"></p><p>在仓库的 <code>README.md</code> 中插入图片</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://img.imaegoo.workers.dev/image.png)</span><br></pre></td></tr></table></figure><p>到 KV ref 中查看效果</p><p><img src="/gallery/2021/git-tracking-image-5.png"></p><p><img src="https://img.imaegoo.workers.dev/image.png"></p><p>利用同样的思路和方法，我们还可以追查网站文章未经授权的转载，试试看！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;大部分 Git 平台，如 Github、Gitlab 等，会在打开仓库时自动渲染 README.md，而我们利用这一特性，通过对 README.md 中的图片访问日志加以记录，可以实现追查代码泄露的目的。&lt;/p&gt;
&lt;p&gt;如果你还没有 Cloudflare 账号，可以&lt;a href=&quot;https://dash.cloudflare.com/sign-up&quot;&gt;申请一个&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;登录 Cloudflare 后，进入 Workers 页面，点击 KV。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="git" scheme="https://www.imaegoo.com/tags/git/"/>
    
    <category term="serverless" scheme="https://www.imaegoo.com/tags/serverless/"/>
    
  </entry>
  
  <entry>
    <title>体验 VitePress：文档编译还能这么快！</title>
    <link href="https://www.imaegoo.com/2021/hello-vitepress/"/>
    <id>https://www.imaegoo.com/2021/hello-vitepress/</id>
    <published>2021-02-07T04:55:00.000Z</published>
    <updated>2021-02-07T04:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>基于 VuePress 的项目文档的编译速度一直让我很苦恼，启动一次 dev server 要大约半分钟的时间，而且哪怕只有一个 Hello World，速度也是这么慢。相比之下，Hexo 都比它快。这当然不只是 VuePress 本身的问题，要说还得归咎于 Webpack。</p><p>于是 Vite 诞生了，一起诞生的还有 VitePress。好耶！虽然 VitePress 仍处于 WIP 阶段，告诉我们不要在任何地方使用，但我们可以提前对比一下，它究竟能比 VuePress 快多少？我们使用基于 VuePress 的 Twikoo 文档测试一下。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D vitepress</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="从-VuePress-迁移配置"><a href="#从-VuePress-迁移配置" class="headerlink" title="从 VuePress 迁移配置"></a>从 VuePress 迁移配置</h3><p>VitePress 中 <code>themeConfig.sidebar</code> 的配置，较 VuePress 有些不同，需要新建 <code>.vitepress</code> 目录，对原先的配置做一点点改动</p><figure class="highlight js"><figcaption><span>.vuepress/config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;Twikoo 中文文档&#x27;</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;Twikoo 中文文档&#x27;</span>,</span><br><span class="line">  <span class="attr">themeConfig</span>: &#123;</span><br><span class="line">    <span class="attr">sidebar</span>: [</span><br><span class="line">      [<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;简介&#x27;</span>],</span><br><span class="line">      <span class="string">&#x27;/quick-start&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;/faq&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;/link&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">lastUpdated</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 假定是 GitHub. 同时也可以是一个完整的 GitLab URL</span></span><br><span class="line">    <span class="attr">repo</span>: <span class="string">&#x27;imaegoo/twikoo&#x27;</span>,</span><br><span class="line">    <span class="comment">// 假如文档不是放在仓库的根目录下：</span></span><br><span class="line">    <span class="attr">docsDir</span>: <span class="string">&#x27;docs&#x27;</span>,</span><br><span class="line">    <span class="comment">// 假如文档放在一个特定的分支下：</span></span><br><span class="line">    <span class="attr">docsBranch</span>: <span class="string">&#x27;dev&#x27;</span>,</span><br><span class="line">    <span class="comment">// 默认是 false, 设置为 true 来启用</span></span><br><span class="line">    <span class="attr">editLinks</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>.vitepress/config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;Twikoo 中文文档&#x27;</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;Twikoo 中文文档&#x27;</span>,</span><br><span class="line">  <span class="attr">themeConfig</span>: &#123;</span><br><span class="line">    <span class="attr">sidebar</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/&#x27;</span>: [</span><br><span class="line">        &#123; <span class="attr">text</span>: <span class="string">&#x27;简介&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">text</span>: <span class="string">&#x27;快速上手&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/quick-start&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">text</span>: <span class="string">&#x27;常见问题&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/faq&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">text</span>: <span class="string">&#x27;API 文档&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/api&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">text</span>: <span class="string">&#x27;相关文档&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/link&#x27;</span> &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">lastUpdated</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 假定是 GitHub. 同时也可以是一个完整的 GitLab URL</span></span><br><span class="line">    <span class="attr">repo</span>: <span class="string">&#x27;imaegoo/twikoo&#x27;</span>,</span><br><span class="line">    <span class="comment">// 假如文档不是放在仓库的根目录下：</span></span><br><span class="line">    <span class="attr">docsDir</span>: <span class="string">&#x27;docs&#x27;</span>,</span><br><span class="line">    <span class="comment">// 假如文档放在一个特定的分支下：</span></span><br><span class="line">    <span class="attr">docsBranch</span>: <span class="string">&#x27;dev&#x27;</span>,</span><br><span class="line">    <span class="comment">// 默认是 false, 设置为 true 来启用</span></span><br><span class="line">    <span class="attr">editLinks</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>VitePress 没有把 README.md 渲染成首页，需要把 README.md 重命名为 index.md。</p><h3 id="测试编译速度"><a href="#测试编译速度" class="headerlink" title="测试编译速度"></a>测试编译速度</h3><p>多次测试在机械硬盘上两者的编译速度，VuePress 的编译时间在 30 ~ 50 秒之间，而 VitePress 的编译时间基本都在 6 ~ 7 秒，遥遥领先。</p><figure class="highlight sh"><figcaption><span>vuepress</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ vuepress build docs</span><br><span class="line"><span class="built_in">wait</span> Extracting site metadata...</span><br><span class="line">tip Apply <span class="built_in">local</span> theme at D:\Workspace\Jimmy\twikoo\docs\.vuepress\theme...</span><br><span class="line">tip Apply theme <span class="built_in">local</span> (extends @vuepress/theme-default) ...</span><br><span class="line">tip Apply plugin container (i.e. <span class="string">&quot;vuepress-plugin-container&quot;</span>) ...tip Apply plugin @vuepress/last-updated (i.e. <span class="string">&quot;@vuepress/plugin-last-updated&quot;</span>) ...</span><br><span class="line">tip Apply plugin @vuepress/register-components (i.e. <span class="string">&quot;@vuepress/plugin-register-components&quot;</span>) ...</span><br><span class="line">tip Apply plugin @vuepress/active-header-links (i.e. <span class="string">&quot;@vuepress/plugin-active-header-links&quot;</span>) ...</span><br><span class="line">tip Apply plugin @vuepress/search (i.e. <span class="string">&quot;@vuepress/plugin-search&quot;</span>) ...</span><br><span class="line">tip Apply plugin @vuepress/nprogress (i.e. <span class="string">&quot;@vuepress/plugin-nprogress&quot;</span>) ...</span><br><span class="line"></span><br><span class="line">√ Client</span><br><span class="line">  Compiled successfully <span class="keyword">in</span> 17.77s</span><br><span class="line"></span><br><span class="line">√ Server</span><br><span class="line">  Compiled successfully <span class="keyword">in</span> 14.63s</span><br><span class="line"></span><br><span class="line"><span class="built_in">wait</span> Rendering static HTML...</span><br><span class="line">success Generated static files <span class="keyword">in</span> docs\.vuepress\dist.</span><br><span class="line"></span><br><span class="line">Done <span class="keyword">in</span> 31.87s.</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>vitepress</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ vitepress build docs</span><br><span class="line">vitepress v0.11.5</span><br><span class="line">vite v2.0.0-beta.65</span><br><span class="line">⠹ building client + server bundles...Langua e does not exist: sh</span><br><span class="line">ge does not exist: shLanguage does not exist: sh</span><br><span class="line">Language does not exist: sh</span><br><span class="line">Language does not exist: sh</span><br><span class="line">Language does not exist: sh</span><br><span class="line">Language does not exist: sh</span><br><span class="line">Language does not exist: sh</span><br><span class="line">✓ building client + server bundles...</span><br><span class="line">✓ rendering pages...</span><br><span class="line">build complete <span class="keyword">in</span> 5.39s.</span><br><span class="line">Done <span class="keyword">in</span> 6.27s.</span><br></pre></td></tr></table></figure><h3 id="页面效果"><a href="#页面效果" class="headerlink" title="页面效果"></a>页面效果</h3><p>基本一致，可以看出 VitePress 存在一些渲染上的小区别。</p><p><img src="/gallery/2021/hello-vitepress-1.png" alt="VuePress 效果"></p><p><img src="/gallery/2021/hello-vitepress-2.png" alt="VitePress 效果"></p><p><img src="/gallery/2021/hello-vitepress-3.png" alt="VuePress 在 IE 11 上的效果"></p><p><img src="/gallery/2021/hello-vitepress-4.png" alt="VitePress 在 IE 11 上的效果"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;基于 VuePress 的项目文档的编译速度一直让我很苦恼，启动一次 dev server 要大约半分钟的时间，而且哪怕只有一个 Hello World，速度也是这么慢。相比之下，Hexo 都比它快。这当然不只是 VuePress 本身的问题，要说还得归咎于 Webpack。&lt;/p&gt;
&lt;p&gt;于是 Vite 诞生了，一起诞生的还有 VitePress。好耶！虽然 VitePress 仍处于 WIP 阶段，告诉我们不要在任何地方使用，但我们可以提前对比一下，它究竟能比 VuePress 快多少？我们使用基于 VuePress 的 Twikoo 文档测试一下。&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn add -D vitepress&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="vue" scheme="https://www.imaegoo.com/tags/vue/"/>
    
    <category term="vite" scheme="https://www.imaegoo.com/tags/vite/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云云开发云函数 之 异步执行，提前返回</title>
    <link href="https://www.imaegoo.com/2020/tcb-functions-async/"/>
    <id>https://www.imaegoo.com/2020/tcb-functions-async/</id>
    <published>2020-12-24T04:30:00.000Z</published>
    <updated>2020-12-24T04:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>云函数的特性是，当 <code>main</code> 函数 return 时，执行进程会被立即冻结。这一点在官方文档<a href="https://docs.cloudbase.net/cloud-function/deep-principle.html#node-js-8-de-yi-bu-xing-wei">Node.js 8 的异步行为</a>中有提到。</p><blockquote><p>对于异步函数，主流程执行完成后，函数实例进程会<strong>被冻结</strong>，进程中的所有异步任务会暂停执行，直到这个进程被再次唤起。<br>另一方面，如果函数实例进程由于某些原因<strong>没被复用</strong>（例如更新了函数代码），这个异步流程中的代码就<strong>永远不会被执行</strong>。</p></blockquote><p>但是有些场景下，云函数需要很长的执行时间，例如，Twikoo 通过 Akismet 检测垃圾评论的过程。按照特性，在检测过程结束前，就不能异步检测，提前返回结果给前端，否则检测进程就会被冻结，导致检测失败。我们只能 await 同步检测，造成请求响应慢，用户体验差。</p><p>按照 Java 的习惯，我们会启动新的线程执行长时间的任务，在云函数中怎样实现？</p><a id="more"></a><p>首先 node.js 想要实现多线程是不可能的，那我们换个思路，可以实现多进程吗？可以通过 “云函数调用云函数” 实现多个云函数进程并发执行吗？可以。</p><figure class="highlight js"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> isSpam = <span class="keyword">await</span> app.callFunction(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;twikoo&#x27;</span>, <span class="comment">// 调起另一个云函数进程</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">event</span>: <span class="string">&#x27;CHECK_SPAM&#x27;</span>, <span class="comment">// 检查垃圾评论</span></span><br><span class="line">      comment <span class="comment">// 传入检查的评论数据</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, &#123; <span class="attr">timeout</span>: <span class="number">300</span> &#125;) <span class="comment">// 设置较短的 timeout 来实现异步</span></span><br><span class="line">  <span class="keyword">return</span> isSpam.result.isSpam <span class="comment">// 如果没有超时，可以直接拿到返回结果</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;开始异步检测垃圾评论&#x27;</span>) <span class="comment">// 如果超时了，两个云函数进程也都会正常执行下去</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>callFunction 提供了请求超时时间的设置，即使请求超时，被调用的云函数也是会继续执行完的。那我们就利用这一点，设置较短的 timeout 来实现异步。这样，用户调起的云函数就能够迅速返回结果，垃圾评论检测就可以在另一个进程中慢慢执行了。</p><p>肯定有人会问，想要保护起来这种“异步云函数”，只能内部调用，不能外部调用，该怎么实现？这里也提供一个简单的方法。</p><figure class="highlight js"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.main = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!isRecursion(context)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// 被外部调用，直接返回</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否为外部调用（即云函数调用云函数）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isRecursion</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> envObj = tcb.getCloudbaseContext(context)</span><br><span class="line">  <span class="keyword">return</span> envObj.TCB_SOURCE.substr(-<span class="number">3</span>, <span class="number">3</span>) === <span class="string">&#x27;scf&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相关完整代码请查看 <a href="https://github.com/imaegoo/twikoo/blob/0.4.3/src/function/twikoo/index.js">Twikoo 源码</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;云函数的特性是，当 &lt;code&gt;main&lt;/code&gt; 函数 return 时，执行进程会被立即冻结。这一点在官方文档&lt;a href=&quot;https://docs.cloudbase.net/cloud-function/deep-principle.html#node-js-8-de-yi-bu-xing-wei&quot;&gt;Node.js 8 的异步行为&lt;/a&gt;中有提到。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于异步函数，主流程执行完成后，函数实例进程会&lt;strong&gt;被冻结&lt;/strong&gt;，进程中的所有异步任务会暂停执行，直到这个进程被再次唤起。&lt;br&gt;另一方面，如果函数实例进程由于某些原因&lt;strong&gt;没被复用&lt;/strong&gt;（例如更新了函数代码），这个异步流程中的代码就&lt;strong&gt;永远不会被执行&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是有些场景下，云函数需要很长的执行时间，例如，Twikoo 通过 Akismet 检测垃圾评论的过程。按照特性，在检测过程结束前，就不能异步检测，提前返回结果给前端，否则检测进程就会被冻结，导致检测失败。我们只能 await 同步检测，造成请求响应慢，用户体验差。&lt;/p&gt;
&lt;p&gt;按照 Java 的习惯，我们会启动新的线程执行长时间的任务，在云函数中怎样实现？&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Serverless" scheme="https://www.imaegoo.com/categories/tech/serverless/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="twikoo" scheme="https://www.imaegoo.com/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云云开发云函数 之 文件导入功能</title>
    <link href="https://www.imaegoo.com/2020/tcb-functions-upload/"/>
    <id>https://www.imaegoo.com/2020/tcb-functions-upload/</id>
    <published>2020-12-10T09:00:00.000Z</published>
    <updated>2020-12-10T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>Twikoo 评论系统要实现导入功能，导入，就需要上传文件。</p><p>通过调用云函数，我们能够传递 string、number 等简单的参数，想要上传文件？不太行。</p><p>想到云开发环境有一块默认开通的 COS 空间，这块空间允许登录用户上传文件，只要利用这片空间，就可以实现将文件上传给云函数的功能了。</p><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h3><ol><li>前端调用 js-sdk 上传文件，获取到 fileID</li><li>前端将 fileID 作为参数，调用云函数</li><li>云函数通过 fileID 获取到文件，并解析</li></ol><a id="more"></a><h3 id="前端上传"><a href="#前端上传" class="headerlink" title="前端上传"></a>前端上传</h3><p>首先需要用户选择文件，先写一个选择文件的 input 和一个上传文件的 button。</p><figure class="highlight html"><figcaption><span>vue template</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inputFile&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;uploadFile&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;loading&quot;</span>&gt;</span>开始导入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再编写上传的方法。</p><figure class="highlight js"><figcaption><span>vue script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户选择的文件</span></span><br><span class="line"><span class="keyword">const</span> filePath = <span class="built_in">this</span>.$refs.inputFile.files[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">if</span> (!filePath) &#123;</span><br><span class="line">  alert(<span class="string">&#x27;未选择文件&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="built_in">this</span>.$tcb.app.uploadFile(&#123;</span><br><span class="line">    <span class="comment">// 由于上传的文件是公有读的，所以并不安全</span></span><br><span class="line">    <span class="comment">// 通过使用毫秒时间戳作为文件名，一定程度防止其他用户猜测并下载文件</span></span><br><span class="line">    <span class="comment">// 适用于并发不大的场景</span></span><br><span class="line">    <span class="attr">cloudPath</span>: <span class="string">`import/<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span>,</span><br><span class="line">    filePath,</span><br><span class="line">    <span class="attr">onUploadProgress</span>: <span class="function">(<span class="params">progressEvent</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 通过 SDK 可以获取到上传进度</span></span><br><span class="line">      <span class="keyword">const</span> percentCompleted = <span class="built_in">Math</span>.round((progressEvent.loaded * <span class="number">100</span>) / progressEvent.total)</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`已上传 <span class="subst">$&#123;percentCompleted&#125;</span>%`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 获得到上传的 fileID</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`上传完成 <span class="subst">$&#123;result.fileID&#125;</span>`</span>)</span><br><span class="line">  <span class="comment">// 调用云函数，传递 fileID 给云函数，具体实现略</span></span><br><span class="line">  <span class="keyword">await</span> importFile(result.fileID)</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.error(e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样一个上传功能就完成了。但我们还需要服务器获取到上传的文件，怎样获得呢？</p><h3 id="云函数下载"><a href="#云函数下载" class="headerlink" title="云函数下载"></a>云函数下载</h3><figure class="highlight js"><figcaption><span>云函数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过接收到的 fileID 读取云存储中的文件</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">readFile</span> (<span class="params">fileId, type, log</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> app.downloadFile(&#123; <span class="attr">fileID</span>: fileId &#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件下载成功&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> content = result.fileContent.toString(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件读取成功&#x27;</span>)</span><br><span class="line">    <span class="comment">// 删除读取完成的文件，保证不因为公有读而泄露</span></span><br><span class="line">    <span class="keyword">await</span> app.deleteFile(&#123; <span class="attr">fileList</span>: [fileId] &#125;)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`评论文件读取失败：<span class="subst">$&#123;e.message&#125;</span>`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，云函数已经成功取得前端上传的文件内容了，接下来就可以实现导入逻辑了。</p><p>本文仅摘部分关键代码解读，完整代码可在 Twikoo 中参考</p><ul><li>前端：<a href="https://github.com/imaegoo/twikoo/blob/0.3.2/src/view/components/TkAdminImport.vue">https://github.com/imaegoo/twikoo/blob/0.3.2/src/view/components/TkAdminImport.vue</a></li><li>云函数：<a href="https://github.com/imaegoo/twikoo/blob/0.3.2/src/function/twikoo/index.js#L392">https://github.com/imaegoo/twikoo/blob/0.3.2/src/function/twikoo/index.js#L392</a></li></ul><p>最终实现了下图所示的导入功能（故意上传了一个错误的文件）</p><p><img src="/gallery/2020/tcb-functions-upload.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;Twikoo 评论系统要实现导入功能，导入，就需要上传文件。&lt;/p&gt;
&lt;p&gt;通过调用云函数，我们能够传递 string、number 等简单的参数，想要上传文件？不太行。&lt;/p&gt;
&lt;p&gt;想到云开发环境有一块默认开通的 COS 空间，这块空间允许登录用户上传文件，只要利用这片空间，就可以实现将文件上传给云函数的功能了。&lt;/p&gt;
&lt;h3 id=&quot;主要思路&quot;&gt;&lt;a href=&quot;#主要思路&quot; class=&quot;headerlink&quot; title=&quot;主要思路&quot;&gt;&lt;/a&gt;主要思路&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;前端调用 js-sdk 上传文件，获取到 fileID&lt;/li&gt;
&lt;li&gt;前端将 fileID 作为参数，调用云函数&lt;/li&gt;
&lt;li&gt;云函数通过 fileID 获取到文件，并解析&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Serverless" scheme="https://www.imaegoo.com/categories/tech/serverless/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="twikoo" scheme="https://www.imaegoo.com/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>解决微信小程序在 iPhone iOS 上 text 宽度只有一半导致的不居中等种种问题</title>
    <link href="https://www.imaegoo.com/2020/weixin-miniprogram-ios-text-width-bug/"/>
    <id>https://www.imaegoo.com/2020/weixin-miniprogram-ios-text-width-bug/</id>
    <published>2020-12-01T09:30:00.000Z</published>
    <updated>2020-12-01T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>当小程序中使用第三方字体时，在 iPhone 11 和 iPhone 12 机型下</p><ul><li>中文字正常</li><li>英文字和数字，居中和右对齐异常</li></ul><p><img src="/gallery/2020/weixin-miniprogram-ios-text-width-bug.jpg"></p><p>这个问题只能在几个特定的机型下出现，不用第三方字体也没有这个问题，安卓机型和开发者工具也重现不了，甚至 iPhone 12 mini 用同一版本也不能重现。</p><p>微信版本：7.0.18<br>小程序基础库：2.14.0<br>iOS：14.2</p><p>这未免也太奇怪了。</p><a id="more"></a><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>代码片段地址：<a href="https://developers.weixin.qq.com/s/wgOVEgmQ7Cmz">https://developers.weixin.qq.com/s/wgOVEgmQ7Cmz</a></p><figure class="highlight html"><figcaption><span>wxml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;page&quot;</span> <span class="attr">wx-if</span>=<span class="string">&quot;&#123;&#123; ready &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-left&quot;</span>&gt;</span>左对齐文本<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>居中文本<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-right&quot;</span>&gt;</span>右对齐文本<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-left&quot;</span>&gt;</span>Left<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Center<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-right&quot;</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-left&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>456<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text-right&quot;</span>&gt;</span>789<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;center-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">ready</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad () &#123;</span><br><span class="line">    wx.loadFontFace(&#123;</span><br><span class="line">      <span class="attr">global</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">family</span>: <span class="string">&#x27;FZZhunYuan-M02S&#x27;</span>,</span><br><span class="line">      <span class="attr">source</span>: <span class="string">&#x27;url(&quot;http://localhost:9000/FZZhunYuan.ttf&quot;)&#x27;</span>,</span><br><span class="line">      <span class="attr">complete</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;loading font status: &#x27;</span> + res.status)</span><br><span class="line">        <span class="built_in">this</span>.setData(&#123; <span class="attr">ready</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>wxss</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.page</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;FZZhunYuan-M02S&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center-line</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50vw</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text-left</span>,</span><br><span class="line"><span class="selector-class">.text-center</span>,</span><br><span class="line"><span class="selector-class">.text-right</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20</span>rpx auto;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text-left</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text-center</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text-right</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>使用微信开发者工具真机调试功能，发现 text 的宽度只有正常的一半宽度，尝试设置 text 的宽度，因为 text 属于 inline 元素，所以没有效果……</p><p>于是乎，想到既然中文字正常，那我们只要在英文字中加入中文字符，是不是能解决问题呢？</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>如果想让文字居中，就在文字左右各加一个全角空格“　”<br>如果想让文字右对齐，就在文字右边加一个全角空格“　”</p><p>其实就是，只要让文本不全是英文和数字，就不会出现问题。</p><p>(⊙﹏⊙)……说是解决办法，其实是一个 workaround，等着官方修复吧……</p><p>社区相应的 bug：<a href="https://developers.weixin.qq.com/community/develop/doc/0006cc3bd7056063605b97a2353c00">https://developers.weixin.qq.com/community/develop/doc/0006cc3bd7056063605b97a2353c00</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h3&gt;&lt;p&gt;当小程序中使用第三方字体时，在 iPhone 11 和 iPhone 12 机型下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文字正常&lt;/li&gt;
&lt;li&gt;英文字和数字，居中和右对齐异常&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/gallery/2020/weixin-miniprogram-ios-text-width-bug.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个问题只能在几个特定的机型下出现，不用第三方字体也没有这个问题，安卓机型和开发者工具也重现不了，甚至 iPhone 12 mini 用同一版本也不能重现。&lt;/p&gt;
&lt;p&gt;微信版本：7.0.18&lt;br&gt;小程序基础库：2.14.0&lt;br&gt;iOS：14.2&lt;/p&gt;
&lt;p&gt;这未免也太奇怪了。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="小程序" scheme="https://www.imaegoo.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云云开发云函数 之 代码共用</title>
    <link href="https://www.imaegoo.com/2020/tcb-functions-dry/"/>
    <id>https://www.imaegoo.com/2020/tcb-functions-dry/</id>
    <published>2020-10-30T05:00:00.000Z</published>
    <updated>2020-12-10T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯云云开发云函数的<a href="https://docs.cloudbase.net/faq/functions.html">文档</a>中写道——</p><blockquote><p>不同的云函数可以共用代码文件（目录）吗<br>未上线</p></blockquote><p>如果是简单的云函数，这一点还能接受，在开发 Twikoo 评论系统的过程中，云函数要实现的 API 越来越多，逐渐让我发现了它的弊端：</p><ol><li>大量的代码复制！</li><li>版本管理非常不便！</li><li>依赖管理非常不便！</li><li>一次要部署十来个云函数，很麻烦！</li><li>每个云函数都有独立的冷启动时间，很慢！</li></ol><p>显然违反了开发的 DRY 原则，这迫使我开始思考解决方案。</p><p>正常的思维是，一个 API 写一个云函数，如果将云函数合并，用一个云函数实现不同的功能，能否解决这样的问题呢？</p><a id="more"></a><p>可以！</p><p>经过改造后的云函数，只保留了一个云函数入口点，通过传入 event，来调用不同的分功能，不同的功能也终于可以复用代码了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 云函数入口点 / entry point</span></span><br><span class="line"><span class="built_in">exports</span>.main = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> res = &#123;&#125;</span><br><span class="line">  <span class="keyword">await</span> readConfig()</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (event.event) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;GET_FUNC_VERSION&#x27;</span>:</span><br><span class="line">        res = getFuncVersion()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;COMMENT_GET&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> commentGet(event)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;COMMENT_LIKE&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> commentLike(event)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;COMMENT_SUBMIT&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> commentSubmit(event)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;COUNTER_GET&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> counterGet(event)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;GET_PASSWORD_STATUS&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> getPasswordStatus()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;SET_PASSWORD&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> setPassword(event.password)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;SET_CONFIG&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> setConfig(event)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;LOGIN&#x27;</span>:</span><br><span class="line">        res = <span class="keyword">await</span> login(event.password)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        res.code = RES_CODE.EVENT_NOT_EXIST</span><br><span class="line">        res.message = <span class="string">&#x27;请更新 Twikoo 云函数至最新版本&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">&#x27;Twikoo 遇到错误，请参考以下错误信息。如有疑问，请反馈至 https://github.com/imaegoo/twikoo/issues&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">&#x27;请求参数：&#x27;</span>, event)</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">&#x27;错误信息：&#x27;</span>, e)</span><br><span class="line">    res.code = RES_CODE.FAIL</span><br><span class="line">    res.message = e.message</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;腾讯云云开发云函数的&lt;a href=&quot;https://docs.cloudbase.net/faq/functions.html&quot;&gt;文档&lt;/a&gt;中写道——&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不同的云函数可以共用代码文件（目录）吗&lt;br&gt;未上线&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果是简单的云函数，这一点还能接受，在开发 Twikoo 评论系统的过程中，云函数要实现的 API 越来越多，逐渐让我发现了它的弊端：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;大量的代码复制！&lt;/li&gt;
&lt;li&gt;版本管理非常不便！&lt;/li&gt;
&lt;li&gt;依赖管理非常不便！&lt;/li&gt;
&lt;li&gt;一次要部署十来个云函数，很麻烦！&lt;/li&gt;
&lt;li&gt;每个云函数都有独立的冷启动时间，很慢！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;显然违反了开发的 DRY 原则，这迫使我开始思考解决方案。&lt;/p&gt;
&lt;p&gt;正常的思维是，一个 API 写一个云函数，如果将云函数合并，用一个云函数实现不同的功能，能否解决这样的问题呢？&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Serverless" scheme="https://www.imaegoo.com/categories/tech/serverless/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="twikoo" scheme="https://www.imaegoo.com/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>无需开发/体验权限，获取任意微信小程序卡片页面路径</title>
    <link href="https://www.imaegoo.com/2020/weixin-miniprogram-get-path/"/>
    <id>https://www.imaegoo.com/2020/weixin-miniprogram-get-path/</id>
    <published>2020-09-24T01:43:00.000Z</published>
    <updated>2020-09-24T05:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>工作上正在开发的一款小程序，需要链接到京东购物的一个活动页面。经过搜索发现，除了在小程序内嵌 Webview，小程序内不能直接跳转一个网页，但是京东也是有自己的小程序的，我们可以跳转到京东的小程序吗？查找文档发现可以用 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/miniprogram-navigate/wx.navigateToMiniProgram.html">wx.navigateToMiniProgram</a> 打开另一个小程序。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wx.navigateToMiniProgram(&#123;</span><br><span class="line">  <span class="attr">appId</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 要打开的小程序 appId</span></span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 打开的页面路径，如果为空则打开首页</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>现在需要的就是京东小程序的 appId 和活动页面的 path 了！</p><p>一番操作后，我发现微信 APP 上既不能获取到小程序的 appId 也不能获取到活动页面的 path，若要获得这两样东西，得开启调试才行，想开启调试，至少要成为小程序开发者……</p><p>京东小程序的开发者，我怎么可能拿得到嘛，我连他们的开发者都接触不到！</p><a id="more"></a><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>小程序页面至少是<strong>可分享的</strong>，如果是配置成完全不可分享的小程序，此方法不可用。</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>拿“抽奖助手”小程序做例子吧。</p><ol><li>打开<a href="https://wx.qq.com/">微信网页版</a>；</li><li>登录后，打开 F12 网页调试，到 Network 标签下；</li><li>在手机端将小程序分享给任意好友；</li><li>在 Network 标签下会看到 POST <code>https://wx.qq.com/cgi-bin/mmwebwx-bin/webwxsync</code> 的请求；</li><li>查看 response 是一个 JSON 字符串；</li><li>展开到 <code>AddMsgList[0].Content</code>，看到一个转义的 XML 字符串；</li><li>解码后，得到原始消息 XML；</li></ol><p><img src="/gallery/2020/weixin-miniprogram-get-path-1.png"><br><img src="/gallery/2020/weixin-miniprogram-get-path-2.png"><br><img src="/gallery/2020/weixin-miniprogram-get-path-3.png"></p><ol start="8"><li>查找 <code>&lt;weappinfo&gt;</code>，找到类似下面的这一段数据；<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">weappinfo</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pagepath</span>&gt;</span>&lt;![CDATA[pages/lucky/lottery/detail.html?id=80018XBB8Mn&amp;home=1]]&gt;<span class="tag">&lt;/<span class="name">pagepath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">appid</span>&gt;</span>wx01bb1ef166cd3f4e<span class="tag">&lt;/<span class="name">appid</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>732<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">type</span>&gt;</span>2<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">weappiconurl</span>&gt;</span>&lt;![CDATA[http://wx.qlogo.cn/mmhead/Q3auHgzwzM6pjwC2de3qEMiaIunrq5WWEdFWlaYBYvhoQPVEA1SfaBw/96]]&gt;<span class="tag">&lt;/<span class="name">weappiconurl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">shareId</span>&gt;</span>&lt;![CDATA[1_wx01bb1ef166cd3f4e_bd399ef25a9defc93c73fb3cacacacd3_1600911693_0]]&gt;<span class="tag">&lt;/<span class="name">shareId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">appservicetype</span>&gt;</span>0<span class="tag">&lt;/<span class="name">appservicetype</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">videopageinfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thumbwidth</span>&gt;</span>720<span class="tag">&lt;/<span class="name">thumbwidth</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thumbheight</span>&gt;</span>576<span class="tag">&lt;/<span class="name">thumbheight</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fromopensdk</span>&gt;</span>0<span class="tag">&lt;/<span class="name">fromopensdk</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">videopageinfo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">weappinfo</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>其中“<code>wx01bb1ef166cd3f4e</code>”即为我们要找的 appId<br>其中“<code>pages/lucky/lottery/detail.html?id=80018XBB8Mn&amp;home=1</code>”删除里面的 <code>.html</code> 后，即为我们要找的 path</li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;工作上正在开发的一款小程序，需要链接到京东购物的一个活动页面。经过搜索发现，除了在小程序内嵌 Webview，小程序内不能直接跳转一个网页，但是京东也是有自己的小程序的，我们可以跳转到京东的小程序吗？查找文档发现可以用 &lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/api/open-api/miniprogram-navigate/wx.navigateToMiniProgram.html&quot;&gt;wx.navigateToMiniProgram&lt;/a&gt; 打开另一个小程序。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wx.navigateToMiniProgram(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;appId&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 要打开的小程序 appId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 打开的页面路径，如果为空则打开首页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;现在需要的就是京东小程序的 appId 和活动页面的 path 了！&lt;/p&gt;
&lt;p&gt;一番操作后，我发现微信 APP 上既不能获取到小程序的 appId 也不能获取到活动页面的 path，若要获得这两样东西，得开启调试才行，想开启调试，至少要成为小程序开发者……&lt;/p&gt;
&lt;p&gt;京东小程序的开发者，我怎么可能拿得到嘛，我连他们的开发者都接触不到！&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="小程序" scheme="https://www.imaegoo.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>VuePress 自定义默认主题页眉页脚</title>
    <link href="https://www.imaegoo.com/2020/vuepress-default-theme-slot/"/>
    <id>https://www.imaegoo.com/2020/vuepress-default-theme-slot/</id>
    <published>2020-09-15T02:55:00.000Z</published>
    <updated>2020-09-15T02:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h3><p>添加 2 个文件</p><figure class="highlight js"><figcaption><span>.vuepress/theme/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">extend</span>: <span class="string">&#x27;@vuepress/theme-default&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>.vuepress/theme/layouts/Layout.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ParentLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">sidebar-top</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>My custom sidebar-top<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">sidebar-bottom</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>My custom sidebar-bottom<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">page-top</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>My custom page-top<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">page-bottom</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>My custom page-bottom<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ParentLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ParentLayout <span class="keyword">from</span> <span class="string">&#x27;@parent-theme/layouts/Layout.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;Layout&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript">    ParentLayout</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/gallery/2020/vuepress-default-theme-slot.png"></p><h3 id="适用版本"><a href="#适用版本" class="headerlink" title="适用版本"></a>适用版本</h3><p>vuepress v1.5.4</p><blockquote><p><a href="https://github.com/vuejs/vuepress/issues/339">Global Footer in Default Theme #339</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;方式&quot;&gt;&lt;a href=&quot;#方式&quot; class=&quot;headerlink&quot; title=&quot;方式&quot;&gt;&lt;/a&gt;方式&lt;/h3&gt;&lt;p&gt;添加 2 个文件&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span&gt;.vuepress/theme/index.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;extend&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;@vuepress/theme-default&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;figcaption&gt;&lt;span&gt;.vuepress/theme/layouts/Layout.vue&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ParentLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt; #&lt;span class=&quot;attr&quot;&gt;sidebar-top&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;My custom sidebar-top&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt; #&lt;span class=&quot;attr&quot;&gt;sidebar-bottom&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;My custom sidebar-bottom&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt; #&lt;span class=&quot;attr&quot;&gt;page-top&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;My custom page-top&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt; #&lt;span class=&quot;attr&quot;&gt;page-bottom&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;My custom page-bottom&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ParentLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ParentLayout &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;@parent-theme/layouts/Layout.vue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;Layout&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;components&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    ParentLayout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="vue" scheme="https://www.imaegoo.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>博客已启用 Twikoo 评论系统</title>
    <link href="https://www.imaegoo.com/2020/hello-twikoo/"/>
    <id>https://www.imaegoo.com/2020/hello-twikoo/</id>
    <published>2020-09-05T07:35:00.000Z</published>
    <updated>2020-09-15T02:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>评论系统一直是静态网站的痛点。</p><ul><li>Valine：安全性不高</li><li>Gitalk：需要评论者注册Github</li><li>Disqus：需要注册，国内访问不畅</li><li>畅言：广告多，需要验证手机号</li></ul><p>难道就没有一个完美的方案？</p><p>在<del>咕咕咕了</del>近三个月后，我自己搞出了一套评论系统，并命名为 Twikoo。</p><ul><li>成本上，腾讯云云开发环境可以<strong>免费搭建</strong></li><li>安全性上，使用腾讯云云函数开发接口，不开放一丁点数据库权限，未来更新将接入 Akismet 反垃圾检查</li><li>易用性上，支持点赞、邮件通知、微信通知（限博主），未来会增加更多玩法</li></ul><p>欢迎访问 <a href="https://twikoo.js.org/">twikoo.js.org</a> 了解更多。</p><a id="more"></a><p><del>滚回去修 bug 了</del></p><img height="300" alt="1080829142" src="/gallery/2020/hello-twikoo.png" />]]></content>
    
    
    <summary type="html">&lt;p&gt;评论系统一直是静态网站的痛点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Valine：安全性不高&lt;/li&gt;
&lt;li&gt;Gitalk：需要评论者注册Github&lt;/li&gt;
&lt;li&gt;Disqus：需要注册，国内访问不畅&lt;/li&gt;
&lt;li&gt;畅言：广告多，需要验证手机号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;难道就没有一个完美的方案？&lt;/p&gt;
&lt;p&gt;在&lt;del&gt;咕咕咕了&lt;/del&gt;近三个月后，我自己搞出了一套评论系统，并命名为 Twikoo。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成本上，腾讯云云开发环境可以&lt;strong&gt;免费搭建&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;安全性上，使用腾讯云云函数开发接口，不开放一丁点数据库权限，未来更新将接入 Akismet 反垃圾检查&lt;/li&gt;
&lt;li&gt;易用性上，支持点赞、邮件通知、微信通知（限博主），未来会增加更多玩法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎访问 &lt;a href=&quot;https://twikoo.js.org/&quot;&gt;twikoo.js.org&lt;/a&gt; 了解更多。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="vue" scheme="https://www.imaegoo.com/tags/vue/"/>
    
    <category term="twikoo" scheme="https://www.imaegoo.com/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>Valine 1.4 如何保护评论者的邮箱和 IP</title>
    <link href="https://www.imaegoo.com/2020/valine-private/"/>
    <id>https://www.imaegoo.com/2020/valine-private/</id>
    <published>2020-08-08T03:05:00.000Z</published>
    <updated>2020-09-03T05:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>AyagawaSeirin 提出了一个 Valine 隐私安全漏洞，<a href="https://github.com/xCss/Valine/issues/336">发送请求中响应内容明文暴露评论者IP、邮箱等隐私内容</a>，所以我就去查了一下 LeanCloud 文档，发现可以<a href="https://leancloud.cn/docs/data_security.html#hash723958571">手动更改字段权限</a>，但是，如果设置 <code>mail</code> 客户端不可见，将不会显示评论者的 Gravatar，转为显示默认头像，因为原版是取到明文邮箱后再转 MD5 取头像的。想到的解决办法是新增一个可见字段存储 mail 的 MD5，需要改 Valine 源码，还需要处理现有数据。</p><p>以下是我实现的魔改版本，基于 Valine.min.js 版本 1.4.14 修改。该魔改版新增一个可见字段（<code>mailMd5</code>）存储 mail 的 MD5，并提供了脚本处理现有评论数据。</p><a id="more"></a><p><img src="/gallery/2020/valine-private-7.png" alt="原版未保护邮箱和 IP"></p><p><img src="/gallery/2020/valine-private-6.jpg" alt="设置字段权限后，即使有 AppId、AppKey、字段名，也无法通过接口查询到隐私数据"></p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><a href="https://github.com/imaegoo/Valine/tree/imaegoo/1.4.14"><img src="https://img.shields.io/github/stars/imaegoo/Valine?style=social" alt="star"></a> <a href="https://www.jsdelivr.com/package/npm/@imaegoo/valine"><img src="https://data.jsdelivr.com/v1/package/npm/@imaegoo/valine/badge" alt="hits"></a></p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ol><li><p>访问 LeanCloud 控制台 &gt; 存储 &gt; 结构化数据</p></li><li><p>选择 Comment Class，分别点击 mail 和 ip 相应字段的下拉菜单，选择编辑<br><img src="/gallery/2020/valine-private-1.png"></p></li><li><p>勾选”客户端不可见”后，客户端发起查询的时候，返回的结果将不包含这个字段<br>* 即使用 AppKey 指定字段名查询，也不会返回字段值，足够安全。<br><img src="/gallery/2020/valine-private-2.png"></p></li><li><p>请同样确认 class 的权限配置<br><img src="/gallery/2020/valine-private-3.png"></p></li><li><p>克隆本仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆</span></span><br><span class="line">git <span class="built_in">clone</span> -b imaegoo/1.4.14 https://github.com/imaegoo/Valine.git valine</span><br><span class="line"><span class="built_in">cd</span> valine</span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>migrate.js</code>，修改里面的 appId，appKey，masterKey，serverURL 为自己的<br><img src="/gallery/2020/valine-private-5.png"></p></li><li><p>执行脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node migrate.js</span><br></pre></td></tr></table></figure><p><img src="/gallery/2020/valine-private-4.png"></p></li><li><p>替换博客的 <code>Valine.min.js</code> 为本仓库到 <code>valine.js</code>，可以使用 CDN 地址：<br><a href="https://cdn.jsdelivr.net/npm/@imaegoo/valine@1.4.1-4.1/valine.min.js">https://cdn.jsdelivr.net/npm/@imaegoo/valine@1.4.1-4.1/valine.min.js</a></p></li><li><p>测试一下，头像是否正常加载，API 是否没有返回 mail 和 ip</p></li></ol><h2 id="改动"><a href="#改动" class="headerlink" title="改动"></a>改动</h2><p>如果你对魔改版感到不放心，可以<a href="https://github.com/imaegoo/Valine/commit/87b56361a30fe2b806ebb56154559141ffca34cb">检查检查我都改了些啥</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;AyagawaSeirin 提出了一个 Valine 隐私安全漏洞，&lt;a href=&quot;https://github.com/xCss/Valine/issues/336&quot;&gt;发送请求中响应内容明文暴露评论者IP、邮箱等隐私内容&lt;/a&gt;，所以我就去查了一下 LeanCloud 文档，发现可以&lt;a href=&quot;https://leancloud.cn/docs/data_security.html#hash723958571&quot;&gt;手动更改字段权限&lt;/a&gt;，但是，如果设置 &lt;code&gt;mail&lt;/code&gt; 客户端不可见，将不会显示评论者的 Gravatar，转为显示默认头像，因为原版是取到明文邮箱后再转 MD5 取头像的。想到的解决办法是新增一个可见字段存储 mail 的 MD5，需要改 Valine 源码，还需要处理现有数据。&lt;/p&gt;
&lt;p&gt;以下是我实现的魔改版本，基于 Valine.min.js 版本 1.4.14 修改。该魔改版新增一个可见字段（&lt;code&gt;mailMd5&lt;/code&gt;）存储 mail 的 MD5，并提供了脚本处理现有评论数据。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>神奇的 @media (prefers-color-scheme: dark)</title>
    <link href="https://www.imaegoo.com/2020/css-prefers-color-scheme/"/>
    <id>https://www.imaegoo.com/2020/css-prefers-color-scheme/</id>
    <published>2020-08-03T07:55:00.000Z</published>
    <updated>2020-08-06T09:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>夜间模式已经实现很久了，当初有人跟我讲，可以增加一个按时间切换的功能。</p><p>直到我在无意间查看 <a href="https://reabble.cn/">Reabble</a> 阅读器的 CSS 样式时，发现了 <code>@media (prefers-color-scheme: dark)</code> 选择器。</p><blockquote><p><strong>来自</strong>：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme">prefers-color-scheme - CSS（层叠样式表） | MDN</a><br>prefers-color-scheme CSS 媒体特性用于检测用户是否有将系统的主题色设置为亮色或者暗色。</p></blockquote><p>简而言之，就是可以实现随系统（或浏览器）的深、浅色模式设置，改变网页配色。</p><p>我觉得这是比按时间切换更好的一个实现，跟随系统设置比跟随时间更加人性化一些，毕竟还有我这种，白天开深色，晚上开浅色的异类（逃）</p><a id="more"></a><video src='/gallery/2020/css-prefers-color-scheme.mp4' type='video/mp4' controls='controls' autoplay='autoplay' loop='loop' width='100%' height='100%' muted="muted"></video>]]></content>
    
    
    <summary type="html">&lt;p&gt;夜间模式已经实现很久了，当初有人跟我讲，可以增加一个按时间切换的功能。&lt;/p&gt;
&lt;p&gt;直到我在无意间查看 &lt;a href=&quot;https://reabble.cn/&quot;&gt;Reabble&lt;/a&gt; 阅读器的 CSS 样式时，发现了 &lt;code&gt;@media (prefers-color-scheme: dark)&lt;/code&gt; 选择器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自&lt;/strong&gt;：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;prefers-color-scheme - CSS（层叠样式表） | MDN&lt;/a&gt;&lt;br&gt;prefers-color-scheme CSS 媒体特性用于检测用户是否有将系统的主题色设置为亮色或者暗色。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简而言之，就是可以实现随系统（或浏览器）的深、浅色模式设置，改变网页配色。&lt;/p&gt;
&lt;p&gt;我觉得这是比按时间切换更好的一个实现，跟随系统设置比跟随时间更加人性化一些，毕竟还有我这种，白天开深色，晚上开浅色的异类（逃）&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="css" scheme="https://www.imaegoo.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>VuePress 密码加密文章</title>
    <link href="https://www.imaegoo.com/2020/vuepress-encrypt/"/>
    <id>https://www.imaegoo.com/2020/vuepress-encrypt/</id>
    <published>2020-08-01T13:55:00.000Z</published>
    <updated>2020-08-01T13:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>事情的起因是，我需要一个存放未分类整理知识点，以及收藏转载文章的私人知识库，和 iMaeGoo’s Blog 区别开来。</p><p>我尝试过简书、语雀、Evernote、OneNote、有道云笔记，对它们的 markdown 支持、导出能力、搜索能力、容量、安全性都有体会。</p><p><img src="/gallery/2020/vuepress-encrypt-5.png" alt="频繁的整顿让我对其安全性产生担忧"></p><p>最后我决定建一个私人 Git 仓库，用 markdown 来记笔记。然后通过 CI/CD 自动构建到一个叫 iMaeGoo’s Diary 的 VuePress 网站。写笔记 Notepad + Git 就能搞定，还能自由选择多种多样的 markdown 编辑器，手机端也可以通过在线 IDE 更新内容，VuePress 的搜索非常好用，安全性也完全在自己的掌控范围之内。</p><p>反正是知识库嘛，我配置了完全公开，方便自己随时随地查看，但由于是未经整理的知识库，也不建议访客去看啦。</p><p>问题就来了，有些笔记包含了敏感信息，怎么在公开的知识库中保护这类信息？</p><p>在寻找 VuePress 加密时，我发现了 <a href="https://www.npmjs.com/package/@oak-tree-house/vuepress-plugin-encrypt">vuepress-plugin-encrypt</a> 这个好用的插件，使用了 <code>aes-128-ctr</code> 来加密内容，你可以直接查看它的<a href="https://szp15.com/2020/02/04/plugin-encrypt-doc/">英文官方文档</a>。</p><a id="more"></a><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/gallery/2020/vuepress-encrypt-2.png" alt="加密部分在源码中的样子"></p><p><img src="/gallery/2020/vuepress-encrypt-1.png" alt="加密部分在页面中的样子"></p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><ol><li>在 VuePress 的项目中安装这个插件<figure class="highlight sh"><figcaption><span>command</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D @oak-tree-house/vuepress-plugin-encrypt</span><br></pre></td></tr></table></figure></li><li>修改配置文件启用插件<figure class="highlight js"><figcaption><span>.vuepress/config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    [<span class="string">&#x27;@oak-tree-house/encrypt&#x27;</span>]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改 <code>package.json</code> 增加加解密的命令<figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;decrypt&quot;</span>: <span class="string">&quot;encrypt decrypt --source-dir &lt;YOUR_SOURCE_DIR&gt; --key-file keys.json --temp .temp-encrypt&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;encrypt&quot;</span>: <span class="string">&quot;encrypt encrypt --source-dir &lt;YOUR_SOURCE_DIR&gt; --key-file keys.json --temp .temp-encrypt&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>* 此处基于官方 doc 有改动，命令参数 <code>encrypt</code> 和 <code>decrypt</code> 需要放在最前，否则会遇到错误 <code>error: unknown option &#39;--source-dir&#39;</code></li><li>把临时目录添加到 <code>.gitignore</code> 列表<figure class="highlight plaintext"><figcaption><span>.gitignore</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/keys.json</span><br><span class="line">/.temp-encrypt</span><br></pre></td></tr></table></figure>* 如果你的是安全的私有 Git 仓库，想一起提交密码文件，可以不 ignore <code>/keys.json</code></li><li>新建密码文件 <code>keys.json</code><figure class="highlight json"><figcaption><span>keys.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;user&quot;</span>: <span class="string">&quot;imaegoo&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;keys&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;mypassword&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>尝试写一段需要加密的内容<figure class="highlight md"><figcaption><span>markdown</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## test</span></span><br><span class="line">::: encrypt key=key owners=imaegoo</span><br><span class="line">my password is helloworld</span><br><span class="line">:::</span><br></pre></td></tr></table></figure></li><li>运行 <code>yarn encrypt</code>，你将会发现上一步的内容被自动替换成密文<figure class="highlight md"><figcaption><span>markdown</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## test</span></span><br><span class="line">::: encrypt encrypted key=key owners=imaegoo</span><br><span class="line">ZpDkUuyB2+O7/Ga9InossDwIYJVn3I6VbdlNLxiJaU/gCDxnC1kQcgbzC9RqVCZ3ru6fpf3B5wnjKKS</span><br><span class="line">R1/miaLoxP4WrCnlYTiL0AeAeLPW0bN+3KqBg2n+fTCqubEFfRZnbKUGvsuZai0vRSW4OYmirew<span class="strong">**</span></span><br><span class="line"><span class="strong">:::</span></span><br></pre></td></tr></table></figure></li><li>大功告成，运行 VuePress 开发模式，测试一下吧！<br><img src="/gallery/2020/vuepress-encrypt-4.png"><br><img src="/gallery/2020/vuepress-encrypt-3.png"></li></ol><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>最新的完整配置参见<a href="https://szp15.com/2020/02/04/plugin-encrypt-doc/#_3-configuration">官方文档</a></p><figure class="highlight js"><figcaption><span>.vuepress/config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    [<span class="string">&#x27;@oak-tree-house/encrypt&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">contentTitle</span>: <span class="string">&#x27;Encrypted Content&#x27;</span>,</span><br><span class="line">      <span class="attr">unencryptedText</span>: <span class="string">&#x27;The content is shown below. It should be encrypted when published.&#x27;</span>,</span><br><span class="line">      <span class="attr">encryptedText</span>: <span class="string">&#x27;This part of content is encrypted. To view it, you need to enter the correct key in the input field below.&#x27;</span>,</span><br><span class="line">      <span class="attr">decryptedText</span>: <span class="string">&#x27;The encrypted content is successfully decrypted and shown below.&#x27;</span>,</span><br><span class="line">      <span class="attr">decryptButtonText</span>: <span class="string">&#x27;Decrypt&#x27;</span>,</span><br><span class="line">      <span class="attr">decryptFailText</span>: <span class="string">&#x27;Failed to decrypt!&#x27;</span>,</span><br><span class="line">      <span class="attr">unencryptedIcon</span>: <span class="literal">undefined</span>,</span><br><span class="line">      <span class="attr">encryptedIcon</span>: <span class="literal">undefined</span>,</span><br><span class="line">      <span class="attr">decryptedIcon</span>: <span class="literal">undefined</span></span><br><span class="line">    &#125;]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><article class="message is-warning"><div class="message-body"><p>本文部分内容来自 <a href="https://szp15.com/2020/02/04/plugin-encrypt-doc/">https://szp15.com/2020/02/04/plugin-encrypt-doc/</a>，采用 MIT License</p></div></article>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;事情的起因是，我需要一个存放未分类整理知识点，以及收藏转载文章的私人知识库，和 iMaeGoo’s Blog 区别开来。&lt;/p&gt;
&lt;p&gt;我尝试过简书、语雀、Evernote、OneNote、有道云笔记，对它们的 markdown 支持、导出能力、搜索能力、容量、安全性都有体会。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallery/2020/vuepress-encrypt-5.png&quot; alt=&quot;频繁的整顿让我对其安全性产生担忧&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后我决定建一个私人 Git 仓库，用 markdown 来记笔记。然后通过 CI/CD 自动构建到一个叫 iMaeGoo’s Diary 的 VuePress 网站。写笔记 Notepad + Git 就能搞定，还能自由选择多种多样的 markdown 编辑器，手机端也可以通过在线 IDE 更新内容，VuePress 的搜索非常好用，安全性也完全在自己的掌控范围之内。&lt;/p&gt;
&lt;p&gt;反正是知识库嘛，我配置了完全公开，方便自己随时随地查看，但由于是未经整理的知识库，也不建议访客去看啦。&lt;/p&gt;
&lt;p&gt;问题就来了，有些笔记包含了敏感信息，怎么在公开的知识库中保护这类信息？&lt;/p&gt;
&lt;p&gt;在寻找 VuePress 加密时，我发现了 &lt;a href=&quot;https://www.npmjs.com/package/@oak-tree-house/vuepress-plugin-encrypt&quot;&gt;vuepress-plugin-encrypt&lt;/a&gt; 这个好用的插件，使用了 &lt;code&gt;aes-128-ctr&lt;/code&gt; 来加密内容，你可以直接查看它的&lt;a href=&quot;https://szp15.com/2020/02/04/plugin-encrypt-doc/&quot;&gt;英文官方文档&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="vue" scheme="https://www.imaegoo.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>PC 浏览器平滑惯性滚动（smooth scroll）一套简单实现</title>
    <link href="https://www.imaegoo.com/2020/h5-smooth-scroll/"/>
    <id>https://www.imaegoo.com/2020/h5-smooth-scroll/</id>
    <published>2020-08-01T03:34:00.000Z</published>
    <updated>2020-08-01T03:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>主要是 Bing 找了许多 libraries。效果在 Chrome for Windows 上都不理想，要么滚动很生硬，要么就是太复杂，就自己实现了。</p><p>本来是 PC only 的，写好后测试了一下移动端，是兼容的，效果也还不错……</p><p><em>不过反正移动端都自带惯性滑动了</em></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><div class="columns" style="width: 100%;">  <div class="column">    <h3 id="无惯性滚动">无惯性滚动</h3>    <div class="ss-container">      <div class="ss-box" style="background-color: #0067A6;"></div>      <div class="ss-box" style="background-color: #00ABD8;"></div>      <div class="ss-box" style="background-color: #008972;"></div>      <div class="ss-box" style="background-color: #EFC028;"></div>      <div class="ss-box" style="background-color: #F2572D;"></div>    </div>  </div>  <div class="column">    <h3 id="有惯性滚动">有惯性滚动</h3>    <div class="ss-container" id="smooth-scrollable">      <div class="smooth-scroll">        <div class="ss-container-body" id="smooth-target">          <div class="ss-box" style="background-color: #0067A6;"></div>          <div class="ss-box" style="background-color: #00ABD8;"></div>          <div class="ss-box" style="background-color: #008972;"></div>          <div class="ss-box" style="background-color: #EFC028;"></div>          <div class="ss-box" style="background-color: #F2572D;"></div>        </div>      </div>      <div class="ss-container-hitbox"></div>    </div>  </div></div><style>.ss-container {  width: 100%;  height: 500px;  position: relative;  overflow-y: auto;}.ss-container.smooth {  overflow-y: hidden;}.ss-container-body {  width: 100%;  position: absolute;  transition: transform 1s cubic-bezier(0.23, 1, 0.32, 1);}.ss-container-hitbox {  width: 100%;  height: 1500px;}.ss-box {  width: 100%;  height: 300px;}.smooth-scroll {  position: -webkit-sticky;  position: sticky;  top: 0;  width: 100%;}</style><script>document.getElementById('smooth-scrollable').onscroll = (e) => {  const target = e.currentTarget  document.getElementById('smooth-target').style.transform = `translateY(-${target.scrollTop}px)`}</script><a id="more"></a><p>配色参考：<a href="https://color.adobe.com/zh/%E6%B5%81%E8%A1%8C%E8%89%B2-color-theme-4031536/">https://color.adobe.com/zh/%E6%B5%81%E8%A1%8C%E8%89%B2-color-theme-4031536/</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><figcaption><span>HTML</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;columns&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;无惯性滚动&quot;</span>&gt;</span>无惯性滚动<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #0067A6;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #00ABD8;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #008972;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #EFC028;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #F2572D;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;有惯性滚动&quot;</span>&gt;</span>有惯性滚动<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-container&quot;</span> <span class="attr">id</span>=<span class="string">&quot;smooth-scrollable&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;smooth-scroll&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-container-body&quot;</span> <span class="attr">id</span>=<span class="string">&quot;smooth-target&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #0067A6;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #00ABD8;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #008972;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #EFC028;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #F2572D;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ss-container-hitbox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>CSS</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ss-container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ss-container</span><span class="selector-class">.smooth</span> &#123;</span><br><span class="line">  <span class="attribute">overflow-y</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ss-container-body</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.23</span>, <span class="number">1</span>, <span class="number">0.32</span>, <span class="number">1</span>); <span class="comment">/* 此处可以改变动画函数和持续时间 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ss-container-hitbox</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1500px</span>; <span class="comment">/* 高度等于滚动区域内的总高度，真实场景下可能需要动态计算 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ss-box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.smooth-scroll</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: -webkit-sticky;</span><br><span class="line">  <span class="attribute">position</span>: sticky;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>Javascript</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;smooth-scrollable&#x27;</span>).onscroll = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> target = e.currentTarget</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;smooth-target&#x27;</span>).style.transform = <span class="string">`translateY(-<span class="subst">$&#123;target.scrollTop&#125;</span>px)`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><ol><li>在滚动区域内增加一个 hitbox，高度等于滚动区域内的总高度，撑起滚动容器</li><li>设置滚动对象为 sticky 定位（如果滚动区域占满浏览器，也可用 fixed），并用 <code>transform: translateY();</code> 控制其上下移动</li><li>监听滚动事件，并动态改变 translateY 的值</li><li>添加 CSS 动画效果 <code>transition: transform 1s;</code>，可以同时设置动画函数和持续时间</li></ol><p>根据这个思路，可以封装一个 JS 库，但是我好懒……</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;主要是 Bing 找了许多 libraries。效果在 Chrome for Windows 上都不理想，要么滚动很生硬，要么就是太复杂，就自己实现了。&lt;/p&gt;
&lt;p&gt;本来是 PC only 的，写好后测试了一下移动端，是兼容的，效果也还不错……&lt;/p&gt;
&lt;p&gt;&lt;em&gt;不过反正移动端都自带惯性滑动了&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;div class=&quot;columns&quot; style=&quot;width: 100%;&quot;&gt;
  &lt;div class=&quot;column&quot;&gt;
    &lt;h3 id=&quot;无惯性滚动&quot;&gt;无惯性滚动&lt;/h3&gt;
    &lt;div class=&quot;ss-container&quot;&gt;
      &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #0067A6;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #00ABD8;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #008972;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #EFC028;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #F2572D;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;column&quot;&gt;
    &lt;h3 id=&quot;有惯性滚动&quot;&gt;有惯性滚动&lt;/h3&gt;
    &lt;div class=&quot;ss-container&quot; id=&quot;smooth-scrollable&quot;&gt;
      &lt;div class=&quot;smooth-scroll&quot;&gt;
        &lt;div class=&quot;ss-container-body&quot; id=&quot;smooth-target&quot;&gt;
          &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #0067A6;&quot;&gt;&lt;/div&gt;
          &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #00ABD8;&quot;&gt;&lt;/div&gt;
          &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #008972;&quot;&gt;&lt;/div&gt;
          &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #EFC028;&quot;&gt;&lt;/div&gt;
          &lt;div class=&quot;ss-box&quot; style=&quot;background-color: #F2572D;&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ss-container-hitbox&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.ss-container {
  width: 100%;
  height: 500px;
  position: relative;
  overflow-y: auto;
}
.ss-container.smooth {
  overflow-y: hidden;
}
.ss-container-body {
  width: 100%;
  position: absolute;
  transition: transform 1s cubic-bezier(0.23, 1, 0.32, 1);
}
.ss-container-hitbox {
  width: 100%;
  height: 1500px;
}
.ss-box {
  width: 100%;
  height: 300px;
}
.smooth-scroll {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  width: 100%;
}
&lt;/style&gt;
&lt;script&gt;
document.getElementById(&#39;smooth-scrollable&#39;).onscroll = (e) =&gt; {
  const target = e.currentTarget
  document.getElementById(&#39;smooth-target&#39;).style.transform = `translateY(-${target.scrollTop}px)`
}
&lt;/script&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="css" scheme="https://www.imaegoo.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>解决 Edge 浏览器 SCRIPT5022: Exception thrown and not caught</title>
    <link href="https://www.imaegoo.com/2020/edge-error/"/>
    <id>https://www.imaegoo.com/2020/edge-error/</id>
    <published>2020-07-22T01:55:00.000Z</published>
    <updated>2020-07-22T01:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>JS 代码在 Safari, Chrome, Firefox 都是好的，就只有 Edge 莫名其妙地报错。</p><p><img src="/gallery/2020/edge-error-1.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SCRIPT5022: Exception thrown and not caught</span><br></pre></td></tr></table></figure><p>未捕获的异常？EXM？你倒是说是什么异常啊？行号还是错的？点过去无法定位错误位置？<code>hash-navigation.js</code>？我的项目里根本都没有这个 js 啊喂！</p><a id="more"></a><p>后来怎么解决的呢？因为这个错误是在滚轮滚动的时候打出来的，我在项目中各个 <code>onScroll</code> 方法外层加了 try catch 块。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是真相水落石出了。</p><p><img src="/gallery/2020/edge-error-2.png"></p><p>某处代码迭代了 DOM 元素，而在 Edge 中，<code>document.getElementsByClassName</code> 的返回不支持迭代，其他浏览器不存在这个问题。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> doms = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;some-class&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> dom <span class="keyword">of</span> doms) &#123; <span class="comment">// Edge 会报错</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>换一种兼容性更好的迭代方式就好了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> doms = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;some-class&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; doms.length; i++) &#123; <span class="comment">// Edge 不会报错了</span></span><br><span class="line">  <span class="keyword">const</span> dom = doms[i]</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你也遇到了这个异常，可以试试加 try catch 的办法，从而定位问题根源。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;JS 代码在 Safari, Chrome, Firefox 都是好的，就只有 Edge 莫名其妙地报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallery/2020/edge-error-1.png&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SCRIPT5022: Exception thrown and not caught&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;未捕获的异常？EXM？你倒是说是什么异常啊？行号还是错的？点过去无法定位错误位置？&lt;code&gt;hash-navigation.js&lt;/code&gt;？我的项目里根本都没有这个 js 啊喂！&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>纯 CSS 实现椭圆轨迹旋转小球</title>
    <link href="https://www.imaegoo.com/2020/css-rotating-ball/"/>
    <id>https://www.imaegoo.com/2020/css-rotating-ball/</id>
    <published>2020-07-04T04:11:37.000Z</published>
    <updated>2020-07-04T04:11:37.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="话不多说看效果"><a href="#话不多说看效果" class="headerlink" title="话不多说看效果"></a>话不多说看效果</h3><div class="frame">  <div class="ball one"></div>  <div class="ball two"></div>  <div class="ball three"></div></div><style>.frame {  background-color: #EEEEEE;  position: relative;  width: 300px;  height: 200px;}.ball {  width: 100px;  height: 100px;  border-radius: 100%;  position: absolute;  animation:    animX 3s cubic-bezier(0.36, 0, 0.64, 1) infinite alternate,    animY 3s cubic-bezier(0.36, 0, 0.64, 1) infinite alternate,    scale 3s cubic-bezier(0.36, 0, 0.64, 1) infinite alternate;}.ball.one {  background-color: #FFFFCC;  animation-delay: -6s, -4.5s, -4.5s;}.ball.two {  background-color: #CCFFFF;  animation-delay: -4s, -2.5s, -2.5s;}.ball.three {  background-color: #FFCCCC;  animation-delay: -2s, -0.5s, -0.5s;}@keyframes animX {  0% { left: 0px; }  100% { left: 200px; }}@keyframes animY {  0% { top: 0px; }  100% { top: 100px; }}@keyframes scale {  0% { transform: scale(0.7); }  100% { transform: scale(1); }}</style><a id="more"></a><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;frame&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ball one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ball two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ball three&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.frame</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">background-color</span>: <span class="number">#EEEEEE</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.ball</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">  <span class="attribute">animation</span>:</span></span><br><span class="line"><span class="css">    animX <span class="number">3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.36</span>, <span class="number">0</span>, <span class="number">0.64</span>, <span class="number">1</span>) infinite alternate,</span></span><br><span class="line"><span class="css">    animY <span class="number">3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.36</span>, <span class="number">0</span>, <span class="number">0.64</span>, <span class="number">1</span>) infinite alternate,</span></span><br><span class="line"><span class="css">    scale <span class="number">3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.36</span>, <span class="number">0</span>, <span class="number">0.64</span>, <span class="number">1</span>) infinite alternate;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.ball</span><span class="selector-class">.one</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">background-color</span>: <span class="number">#FFFFCC</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">animation-delay</span>: -<span class="number">6s</span>, -<span class="number">4.5s</span>, -<span class="number">4.5s</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.ball</span><span class="selector-class">.two</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">background-color</span>: <span class="number">#CCFFFF</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">animation-delay</span>: -<span class="number">4s</span>, -<span class="number">2.5s</span>, -<span class="number">2.5s</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.ball</span><span class="selector-class">.three</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">background-color</span>: <span class="number">#FFCCCC</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">animation-delay</span>: -<span class="number">2s</span>, -<span class="number">0.5s</span>, -<span class="number">0.5s</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> animX &#123;</span></span><br><span class="line"><span class="css">  <span class="number">0%</span> &#123; <span class="attribute">left</span>: <span class="number">0px</span>; &#125;</span></span><br><span class="line"><span class="css">  <span class="number">100%</span> &#123; <span class="attribute">left</span>: <span class="number">200px</span>; &#125;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> animY &#123;</span></span><br><span class="line"><span class="css">  <span class="number">0%</span> &#123; <span class="attribute">top</span>: <span class="number">0px</span>; &#125;</span></span><br><span class="line"><span class="css">  <span class="number">100%</span> &#123; <span class="attribute">top</span>: <span class="number">100px</span>; &#125;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> scale &#123;</span></span><br><span class="line"><span class="css">  <span class="number">0%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.7</span>); &#125;</span></span><br><span class="line"><span class="css">  <span class="number">100%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>); &#125;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>设置动画，分别控制小球 x 轴，y 轴，以及缩放比。先画张图，把小球 x 轴、y 轴的位置、缩放比与时间的关系用坐标系表示出来——</p><p><img src="/gallery/2020/css-rotating-ball.png"></p><p>通过这张画图可以看出——</p><ol><li>想顺时针，x 轴运动需要比 y 轴运动提前 1/4 个周期，逆时针则延后 1/4 个周期；</li><li>三个小球想均匀分布，需要两两错开 1/3 个周期；</li><li>y 轴到达最高点时，球距离最远，y 轴到达最低点时，球距离最近，近大远小，y 轴位置和缩放比是正相关。</li></ol><p>我们动画一个周期是 6 秒，理解了这些，就可以写出相应的 animation 出来了。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.jb51.net/css/643232.html">https://www.jb51.net/css/643232.html</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;话不多说看效果&quot;&gt;&lt;a href=&quot;#话不多说看效果&quot; class=&quot;headerlink&quot; title=&quot;话不多说看效果&quot;&gt;&lt;/a&gt;话不多说看效果&lt;/h3&gt;&lt;div class=&quot;frame&quot;&gt;
  &lt;div class=&quot;ball one&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;ball two&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;ball three&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;style&gt;
.frame {
  background-color: #EEEEEE;
  position: relative;
  width: 300px;
  height: 200px;
}
.ball {
  width: 100px;
  height: 100px;
  border-radius: 100%;
  position: absolute;
  animation:
    animX 3s cubic-bezier(0.36, 0, 0.64, 1) infinite alternate,
    animY 3s cubic-bezier(0.36, 0, 0.64, 1) infinite alternate,
    scale 3s cubic-bezier(0.36, 0, 0.64, 1) infinite alternate;
}
.ball.one {
  background-color: #FFFFCC;
  animation-delay: -6s, -4.5s, -4.5s;
}
.ball.two {
  background-color: #CCFFFF;
  animation-delay: -4s, -2.5s, -2.5s;
}
.ball.three {
  background-color: #FFCCCC;
  animation-delay: -2s, -0.5s, -0.5s;
}
@keyframes animX {
  0% { left: 0px; }
  100% { left: 200px; }
}
@keyframes animY {
  0% { top: 0px; }
  100% { top: 100px; }
}
@keyframes scale {
  0% { transform: scale(0.7); }
  100% { transform: scale(1); }
}
&lt;/style&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="css" scheme="https://www.imaegoo.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>JDBC 连接 Azure Database for MySQL 报错 SSL peer shut down incorrectly 的解决</title>
    <link href="https://www.imaegoo.com/2020/azure-mysql-jdbc-ssl-issue/"/>
    <id>https://www.imaegoo.com/2020/azure-mysql-jdbc-ssl-issue/</id>
    <published>2020-06-04T08:59:17.000Z</published>
    <updated>2020-06-04T08:59:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个问题找了一天的原因，如果你也遇到了这个问题，希望能帮到你。</p><p><img src="/gallery/2020/azure-mysql-jdbc-ssl-issue.png"></p><p>完整错误信息：</p><figure class="highlight plaintext"><figcaption><span>点击展开 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">03-Jun-2020 07:52:22.772 SEVERE [main] org.apache.tomcat.jdbc.pool.ConnectionPool.init Unable to create initial connections of pool.</span><br><span class="line">com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure</span><br><span class="line"></span><br><span class="line">The last packet successfully received from the server was 384 milliseconds ago.  The last packet sent successfully to the server was 376 milliseconds ago.</span><br><span class="line">at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)</span><br><span class="line">at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)</span><br><span class="line">at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)</span><br><span class="line">at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)</span><br><span class="line">at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)</span><br><span class="line">at com.mysql.jdbc.ExportControlled.transformSocketToSSLSocket(ExportControlled.java:105)</span><br><span class="line">at com.mysql.jdbc.MysqlIO.negotiateSSLConnection(MysqlIO.java:5126)</span><br><span class="line">at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1666)</span><br><span class="line">at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1244)</span><br><span class="line">at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2397)</span><br><span class="line">at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)</span><br><span class="line">at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)</span><br><span class="line">at com.mysql.jdbc.ConnectionImpl.&lt;init&gt;(ConnectionImpl.java:813)</span><br><span class="line">at com.mysql.jdbc.JDBC4Connection.&lt;init&gt;(JDBC4Connection.java:47)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)</span><br><span class="line">at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)</span><br><span class="line">at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)</span><br><span class="line">at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)</span><br><span class="line">at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)</span><br><span class="line">at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:744)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:676)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.ConnectionPool.&lt;init&gt;(ConnectionPool.java:154)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.DataSourceFactory.createDataSource(DataSourceFactory.java:560)</span><br><span class="line">at org.apache.tomcat.jdbc.pool.DataSourceFactory.getObjectInstance(DataSourceFactory.java:244)</span><br><span class="line">at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:96)</span><br><span class="line">at java.naming/javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:325)</span><br><span class="line">at org.apache.naming.NamingContext.lookup(NamingContext.java:857)</span><br><span class="line">at org.apache.naming.NamingContext.lookup(NamingContext.java:160)</span><br><span class="line">at org.apache.naming.NamingContext.lookup(NamingContext.java:843)</span><br><span class="line">at org.apache.naming.NamingContext.lookup(NamingContext.java:174)</span><br><span class="line">at org.apache.catalina.core.NamingContextListener.addResource(NamingContextListener.java:1017)</span><br><span class="line">at org.apache.catalina.core.NamingContextListener.createNamingContext(NamingContextListener.java:557)</span><br><span class="line">at org.apache.catalina.core.NamingContextListener.lifecycleEvent(NamingContextListener.java:253)</span><br><span class="line">at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)</span><br><span class="line">at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:924)</span><br><span class="line">at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)</span><br><span class="line">at org.apache.catalina.startup.Catalina.start(Catalina.java:633)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.base/java.lang.reflect.Method.invoke(Method.java:566)</span><br><span class="line">at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:344)</span><br><span class="line">at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:475)</span><br><span class="line">Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1322)</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1160)</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063)</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402)</span><br><span class="line">at com.mysql.jdbc.ExportControlled.transformSocketToSSLSocket(ExportControlled.java:90)</span><br><span class="line">... 44 more</span><br><span class="line">Suppressed: java.net.SocketException: Broken pipe (Write failed)</span><br><span class="line">at java.base/java.net.SocketOutputStream.socketWrite0(Native Method)</span><br><span class="line">at java.base/java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:110)</span><br><span class="line">at java.base/java.net.SocketOutputStream.write(SocketOutputStream.java:150)</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketOutputRecord.encodeAlert(SSLSocketOutputRecord.java:81)</span><br><span class="line">at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:351)</span><br><span class="line">at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:263)</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:405)</span><br><span class="line">... 45 more</span><br><span class="line">Caused by: java.io.EOFException: SSL peer shut down incorrectly</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:167)</span><br><span class="line">at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:108)</span><br><span class="line">at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1152)</span><br><span class="line">... 47 more</span><br></pre></td></tr></table></figure><p>提取关键信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake</span><br><span class="line">Caused by: java.io.EOFException: SSL peer shut down incorrectly</span><br></pre></td></tr></table></figure><p>得知 SSL 握手失败，于是我找了 Azure 的示例代码（<a href="https://docs.azure.cn/zh-cn/mysql/connect-java">https://docs.azure.cn/zh-cn/mysql/connect-java</a>）来测，也是同样的问题。</p><a id="more"></a><p>又参考了《<a href="https://stackoverflow.com/questions/43635449/how-to-configure-spring-boot-application-to-use-ssl-tls-over-mysql?rq=1">How to configure spring boot application to use SSL/TLS over MySQL?</a>》去信任 Azure 的 CA 证书，仍然不起作用。</p><p>最后发现是我用的 mysql-connector-java 版本过低导致，我们使用的 Camunda 的 docker 镜像内置了 <code>5.1.21</code> 的数据库驱动，我的测试代码也是同样的版本，连接不上，只要升级到目前的最新版 <code>5.1.49</code>，问题就解决了。</p><p>另一个坑，如果收到提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 9002 (28000): The connection string may not be right. Please visit portal for references.</span><br></pre></td></tr></table></figure><p>一般是连接用户名没有加实例名，比如数据库地址是 <code>abc123.mysql.database.chinacloudapi.cn</code>，那么连接用户名要以 <code>@abc123</code> 结尾。</p><p>还有 Azure 整理了一个使用数据库时的常见问题列表，里面有很多问题都会踩到，建议看看——</p><p><a href="https://docs.azure.cn/zh-cn/mysql-database-on-azure/mysql-database-tech-faq">https://docs.azure.cn/zh-cn/mysql-database-on-azure/mysql-database-tech-faq</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个问题找了一天的原因，如果你也遇到了这个问题，希望能帮到你。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/gallery/2020/azure-mysql-jdbc-ssl-issue.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;完整错误信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;figcaption&gt;&lt;span&gt;点击展开 &gt;folded&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;03-Jun-2020 07:52:22.772 SEVERE [main] org.apache.tomcat.jdbc.pool.ConnectionPool.init Unable to create initial connections of pool.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The last packet successfully received from the server was 384 milliseconds ago.  The last packet sent successfully to the server was 376 milliseconds ago.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1117)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.ExportControlled.transformSocketToSSLSocket(ExportControlled.java:105)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.MysqlIO.negotiateSSLConnection(MysqlIO.java:5126)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1666)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1244)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2397)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2430)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2215)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.ConnectionImpl.&amp;lt;init&amp;gt;(ConnectionImpl.java:813)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.JDBC4Connection.&amp;lt;init&amp;gt;(JDBC4Connection.java:47)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:334)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:744)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:676)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.ConnectionPool.&amp;lt;init&amp;gt;(ConnectionPool.java:154)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.DataSourceFactory.createDataSource(DataSourceFactory.java:560)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.tomcat.jdbc.pool.DataSourceFactory.getObjectInstance(DataSourceFactory.java:244)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:96)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.naming/javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:325)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.naming.NamingContext.lookup(NamingContext.java:857)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.naming.NamingContext.lookup(NamingContext.java:160)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.naming.NamingContext.lookup(NamingContext.java:843)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.naming.NamingContext.lookup(NamingContext.java:174)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.core.NamingContextListener.addResource(NamingContextListener.java:1017)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.core.NamingContextListener.createNamingContext(NamingContextListener.java:557)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.core.NamingContextListener.lifecycleEvent(NamingContextListener.java:253)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:924)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.startup.Catalina.start(Catalina.java:633)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:344)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:475)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1322)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1160)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at com.mysql.jdbc.ExportControlled.transformSocketToSSLSocket(ExportControlled.java:90)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		... 44 more&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Suppressed: java.net.SocketException: Broken pipe (Write failed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			at java.base/java.net.SocketOutputStream.socketWrite0(Native Method)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			at java.base/java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:110)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			at java.base/java.net.SocketOutputStream.write(SocketOutputStream.java:150)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			at java.base/sun.security.ssl.SSLSocketOutputRecord.encodeAlert(SSLSocketOutputRecord.java:81)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:351)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:263)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:405)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			... 45 more&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Caused by: java.io.EOFException: SSL peer shut down incorrectly&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:167)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:108)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1152)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		... 47 more&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;提取关键信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Caused by: java.io.EOFException: SSL peer shut down incorrectly&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;得知 SSL 握手失败，于是我找了 Azure 的示例代码（&lt;a href=&quot;https://docs.azure.cn/zh-cn/mysql/connect-java&quot;&gt;https://docs.azure.cn/zh-cn/mysql/connect-java&lt;/a&gt;）来测，也是同样的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="BackEnd" scheme="https://www.imaegoo.com/categories/tech/backend/"/>
    
    
    <category term="java" scheme="https://www.imaegoo.com/tags/java/"/>
    
    <category term="azure" scheme="https://www.imaegoo.com/tags/azure/"/>
    
    <category term="mysql" scheme="https://www.imaegoo.com/tags/mysql/"/>
    
  </entry>
  
</feed>
